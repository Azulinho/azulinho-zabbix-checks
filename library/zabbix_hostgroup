#!/usr/bin/python2.7
# -*- coding: utf-8 -*-
#
# This file is part of Ansible
#
# Ansible is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Ansible is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ansible.  If not, see <http://www.gnu.org/licenses/>.

DOCUMENTATION = '''
---
module: zabbix_hostgroup
version_added: "0.0.2"
short_description: Add or remove zabbix hostgroups
description:
    - Creates or Deletes Zabbix hostgroups
options:
    name:
        required: true
        description:
            - Name of the hostgroup to manage.
    url:
        required: true
        description:
            - The full zabbix URL to the api
            - http://zabbix/api_jsonrpc.php
    username:
        required: true
        description:
            - the zabbix admin username
    password:
        required: true
        description:
            - the zabbix admin password
    state:
        required: false
        default: "present"
        choices: [ present, absent ]
        description:
            - Whether the hostgroup should be present or not on the remote host.

'''

EXAMPLES = '''
# Example:
- name: Create Zabbix HostGroup
  zabbix_hostgroup:
     name=mygroup
     url=http://zabbix_server/api_jsonrpc.php
     username=zabbix_username
     password=zabbix_password
     state=present
'''

import glutabbix
from glutabbix import *
from pprint import pprint

class HostGroup(object):

    def logme(self, text):
        with open('/tmp/log', 'a') as out:
            pprint(text, stream=out)

    def __init__(self, module):
        self.module = module
        self.state = module.params['state']
        self.name = module.params['name']
        self.hostgroup = module.params['hostgroup']
        self.url = module.params['url']
        self.username = module.params['username']
        self.password = module.params['password']
        self.zabbix = Glutabbix(self.url, self.username, self.password)

    def exists(self):
        try:
            if self.zabbix.get_hostgroup(self.name):
                return True
        except KeyError:
            return False

    def delete(self):
        try:
            groupid = self.zabbix.get_hostgroup(self.name)[0]['groupid']
            output = self.zabbix.delete_hostgroup(groupid)
            rc = 0
            err = 0
            return rc, output, err
        except:
            rc = 1
            err = output
            return rc, output, err

    def create(self):
        try:
            output = self.zabbix.create_hostgroup(self.name)
            rc = 0
            err = 0
            return rc, output, err
        except:
            rc = 1
            err = output
            return rc, output, err

    def info(self):
        if not self.exists():
            return False
        try:
            info = list(self.zabbix.get_hostgroup(self.name))
        except KeyError:
            return False
        return info

# ===========================================


def main():
    module = AnsibleModule(
        argument_spec=dict(
            state=dict(
                default='present',
                choices=['present', 'absent'], type='str'),
            url=dict(required=True, type='str'),
            username=dict(required=True, type='str'),
            password=dict(required=True, type='str'),
            name=dict(required=True, type='str'),
            hostgroup=dict(default=None, type='str'),
        ),
        supports_check_mode=False
    )

    hostgroup = HostGroup(module)

    rc, out, err = None, '', ''
    result = {}
    result['name'] = hostgroup.name
    result['state'] = hostgroup.state

    if hostgroup.state == 'absent':
        if hostgroup.exists():
            (rc, out, err) = hostgroup.delete()
            if rc != 0:
                module.fail_json(name=hostgroup.name, msg=err)
    elif hostgroup.state == 'present':
        if not hostgroup.exists():
            (rc, out, err) = hostgroup.create()
        if rc is not None and rc != 0:
            module.fail_json(name=hostgroup.name, msg=err)

    if rc is None:
        result['changed'] = False
    else:
        result['changed'] = True

    if out:
        result['stdout'] = out

    if err:
        result['stderr'] = err

    if hostgroup.exists():
        info = hostgroup.info()
        result['hostgroup'] = info[0]

    module.exit_json(**result)

# import module snippets
from ansible.module_utils.basic import *
main()
